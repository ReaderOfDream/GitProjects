//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace Repository
{
    #region Контексты
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    public partial class Model1Container : ObjectContext
    {
        #region Конструкторы
    
        /// <summary>
        /// Инициализирует новый объект Model1Container, используя строку соединения из раздела "Model1Container" файла конфигурации приложения.
        /// </summary>
        public Model1Container() : base("name=Model1Container", "Model1Container")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта Model1Container.
        /// </summary>
        public Model1Container(string connectionString) : base(connectionString, "Model1Container")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта Model1Container.
        /// </summary>
        public Model1Container(EntityConnection connection) : base(connection, "Model1Container")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Разделяемые методы
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Свойства ObjectSet
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Сущность1> Сущность1Набор
        {
            get
            {
                if ((_Сущность1Набор == null))
                {
                    _Сущность1Набор = base.CreateObjectSet<Сущность1>("Сущность1Набор");
                }
                return _Сущность1Набор;
            }
        }
        private ObjectSet<Сущность1> _Сущность1Набор;

        #endregion
        #region Методы AddTo
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Сущность1Набор. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToСущность1Набор(Сущность1 сущность1)
        {
            base.AddObject("Сущность1Набор", сущность1);
        }

        #endregion
    }
    

    #endregion
    
    #region Сущности
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="Сущность1")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Сущность1 : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Сущность1.
        /// </summary>
        /// <param name="идентификатор">Исходное значение свойства Идентификатор.</param>
        public static Сущность1 CreateСущность1(global::System.Int32 идентификатор)
        {
            Сущность1 сущность1 = new Сущность1();
            сущность1.Идентификатор = идентификатор;
            return сущность1;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Идентификатор
        {
            get
            {
                return _Идентификатор;
            }
            set
            {
                if (_Идентификатор != value)
                {
                    OnИдентификаторChanging(value);
                    ReportPropertyChanging("Идентификатор");
                    _Идентификатор = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Идентификатор");
                    OnИдентификаторChanged();
                }
            }
        }
        private global::System.Int32 _Идентификатор;
        partial void OnИдентификаторChanging(global::System.Int32 value);
        partial void OnИдентификаторChanged();

        #endregion
    
    }

    #endregion
    
}
